{
  "AllowedHosts": "*",
  "Logging": {
    "LogLevel": {
      "Default": "Trace",
      "Microsoft.AspNetCore": "Error",
      "Microsoft.AspNetCore.Hosting.Diagnostics": "Trace"
    }
  },
  "AppConfig": {
    "SerialNumber": "ujKUWWdSMrMbcWjEnwyZE9ymvmhpACFojjoZuAkGgH4tPsF2VfAWJsCt3WNDGTUFsCwKYaXFhh2TovQU",
    "AuthTokenSecrect": "GfWZAv1LOLSFQJrYeukn9u2qqkw2M6Jq",
    "PasswordTokenSecrect": "ErrElj2CujglITMGP#E#7QsI%f9h&c",
    "DatabaseType": "SqlServer",
    "ConnectionString": "Server=LAPTOP-B15MRQ14\\MSSQLSERVER01;Database=PeoManageSoft;Trusted_Connection=True;",
    "TokenCacheAddress": "127.0.0.1:6379",
    "TokenCacheInstance": "PeoManageSoft.Auth",
    "AllowedOrigins": [
      "http://localhost:4200"
    ],
    "SmtpConfig": {
      "HostEmail": "smtp.teste.com.br",
      "PortEmail": 587,
      "UserNameEmail": "suporte@teste.com.br",
      "PasswordEmail": "teste",
      "SenderAddressEmail": "suporte@teste.com.br",
      "DisplayNameEmail": "Display",
      "SubjectEncodingEmail": "utf-8",
      "BodyEncodingEmail": "utf-8"
    },
    "ImagesCatalog": {
      "Logo64x64": "D:\\TestServer\\PeoManageSoft\\Images\\Logo64x64.png",
      "Logo518x518": "D:\\TestServer\\PeoManageSoft\\Images\\Logo518x518.png",
      "Keys256x256": "D:\\TestServer\\PeoManageSoft\\Images\\Keys256x256.png"
    },
    "EmailTemplatesCatalog": {
      "RememberPassword": {
        "Directory": "D:\\TestServer\\PeoManageSoft\\EmailTemplates\\RememberPassword",
        "HtmlFileName": "Template{language}.html",
        "SubjectFileName": "Subject{language}.txt"
      }
    }
  },
  "NLog": {
    "autoReload": true,
    "extensions": [
      {
        "NLog.Web.AspNetCore": {
          "assembly": "NLog.Web.AspNetCore"
        }
      }
    ],
    "targets": {
      "allLogs": {
        "target": {
          "type": "File",
          "fileName": "C:\\Traces\\PeoManageSoft\\${shortdate}.log",
          "layout": "${level}|${time}|Id=${mdlc:item=requestId} | ${logger}: ${message} ${exception:format=tostring}"
        },
        "type": "AsyncWrapper"
      }
    },
    "rules": [
      {
        "logger": "*",
        "minLevel": "Trace",
        "writeTo": "allLogs"
      },
      {
        "logger": "System.ServiceModel.*",
        "minLevel": "Debug",
        "writeTo": "allLogs",
        "final": true,
        "filters": {
          "defaultAction": "Ignore",
          "when": {
            "condition": "length('${mdlc:item=requestId}') > 0",
            "action": "Log"
          }
        }
      }
    ]
  }
}
